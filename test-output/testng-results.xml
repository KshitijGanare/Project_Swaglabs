<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="27" total="48" passed="18" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-19T23:09:44 IST" name="Swaglabs_Suite" finished-at="2024-12-19T23:16:54 IST" duration-ms="430160">
    <groups>
      <group name="Sanity">
        <method signature="BackPackProductPageTest.verifyBackPackPgAddCartButtonTest()[pri:0, instance:testcases.BackPackProductPageTest@79d8407f]" name="verifyBackPackPgAddCartButtonTest" class="testcases.BackPackProductPageTest"/>
        <method signature="BackPackProductPageTest.verifyBackPackPgRemoveButtonTest()[pri:1, instance:testcases.BackPackProductPageTest@79d8407f]" name="verifyBackPackPgRemoveButtonTest" class="testcases.BackPackProductPageTest"/>
        <method signature="BackPackProductPageTest.verifyBackToProductsButtonTest()[pri:1, instance:testcases.BackPackProductPageTest@79d8407f]" name="verifyBackToProductsButtonTest" class="testcases.BackPackProductPageTest"/>
        <method signature="CartPageTest.verifyBackpacklinkTest()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" name="verifyBackpacklinkTest" class="testcases.CartPageTest"/>
        <method signature="CartPageTest.verifyBikeLightLink()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" name="verifyBikeLightLink" class="testcases.CartPageTest"/>
        <method signature="CartPageTest.verifyContinueShoppingBtnTest()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" name="verifyContinueShoppingBtnTest" class="testcases.CartPageTest"/>
        <method signature="CartPageTest.verifyOrderPriceTest()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" name="verifyOrderPriceTest" class="testcases.CartPageTest"/>
        <method signature="InventoryPageTest.verifyAboutMenuLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyAboutMenuLinkTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyBackPackTextTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyBackPackTextTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyBackPackThumbnailImgTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyBackPackThumbnailImgTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyBackpackLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyBackpackLinkTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyBikeLightLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyBikeLightLinkTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyBoltTshirtLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyBoltTshirtLinkTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyDropdownTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyDropdownTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyFleeceJacketTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyFleeceJacketTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyFleeceJacketThumbnailImgTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyFleeceJacketThumbnailImgTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyMenuCrossButtonTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyMenuCrossButtonTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyResetAppStateTest()[pri:2, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyResetAppStateTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifylogoutLinkTest()[pri:2, instance:testcases.InventoryPageTest@13b6aecc]" name="verifylogoutLinkTest" class="testcases.InventoryPageTest"/>
        <method signature="BackPackProductPageTest.verifyBackPackThumbnailImgTest()[pri:3, instance:testcases.BackPackProductPageTest@79d8407f]" name="verifyBackPackThumbnailImgTest" class="testcases.BackPackProductPageTest"/>
      </group> <!-- Sanity -->
      <group name="Regression">
        <method signature="BackPackProductPageTest.verifyBackPackPgAddCartButtonTest()[pri:0, instance:testcases.BackPackProductPageTest@79d8407f]" name="verifyBackPackPgAddCartButtonTest" class="testcases.BackPackProductPageTest"/>
        <method signature="BackPackProductPageTest.verifyBackPackPgRemoveButtonTest()[pri:1, instance:testcases.BackPackProductPageTest@79d8407f]" name="verifyBackPackPgRemoveButtonTest" class="testcases.BackPackProductPageTest"/>
        <method signature="BackPackProductPageTest.verifyBackToProductsButtonTest()[pri:1, instance:testcases.BackPackProductPageTest@79d8407f]" name="verifyBackToProductsButtonTest" class="testcases.BackPackProductPageTest"/>
        <method signature="CartPageTest.verifyBackpacklinkTest()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" name="verifyBackpacklinkTest" class="testcases.CartPageTest"/>
        <method signature="CartPageTest.verifyBikeLightLink()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" name="verifyBikeLightLink" class="testcases.CartPageTest"/>
        <method signature="CartPageTest.verifyContinueShoppingBtnTest()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" name="verifyContinueShoppingBtnTest" class="testcases.CartPageTest"/>
        <method signature="CartPageTest.verifyOrderPriceTest()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" name="verifyOrderPriceTest" class="testcases.CartPageTest"/>
        <method signature="InventoryPageTest.verifyBackPackTextTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyBackPackTextTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyBackpackLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyBackpackLinkTest" class="testcases.InventoryPageTest"/>
        <method signature="InventoryPageTest.verifyTwitterLogoTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" name="verifyTwitterLogoTest" class="testcases.InventoryPageTest"/>
        <method signature="BackPackProductPageTest.verifyBackPackThumbnailImgTest()[pri:3, instance:testcases.BackPackProductPageTest@79d8407f]" name="verifyBackPackThumbnailImgTest" class="testcases.BackPackProductPageTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2024-12-19T23:09:44 IST" name="Regression Tests" finished-at="2024-12-19T23:16:54 IST" duration-ms="430160">
      <class name="testcases.BackPackProductPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:15:26 IST" name="setUp" finished-at="2024-12-19T23:15:43 IST" duration-ms="17386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBackPackPgAddCartButtonTest()[pri:0, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:15:43 IST" name="verifyBackPackPgAddCartButtonTest" finished-at="2024-12-19T23:15:49 IST" duration-ms="5666" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to no longer be visible: By.xpath: //span[@class='shopping_cart_badge'] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.8.3', revision: 'e5e76298c3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 115.0.2, moz:accessibilityChecks: false, moz:buildID: 20230710165010, moz:debuggerAddress: 127.0.0.1:12064, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 23840, moz:profile: C:\Users\Hp\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://127.0.0.1:12064/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 296f3763-f23e-44d1-ad60-6e1c8303a09a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to no longer be visible: By.xpath: //span[@class='shopping_cart_badge'] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.8.3', revision: 'e5e76298c3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 115.0.2, moz:accessibilityChecks: false, moz:buildID: 20230710165010, moz:debuggerAddress: 127.0.0.1:12064, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 23840, moz:profile: C:\Users\Hp\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://127.0.0.1:12064/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 296f3763-f23e-44d1-ad60-6e1c8303a09a
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:87)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at pages.BackPackProdPage.verifyBackPackPgAddCartButton(BackPackProdPage.java:66)
at testcases.BackPackProductPageTest.verifyBackPackPgAddCartButtonTest(BackPackProductPageTest.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBackPackPgAddCartButtonTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:15:49 IST" name="tearDown" finished-at="2024-12-19T23:15:50 IST" duration-ms="1592" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBackPackPgAddCartButtonTest status=FAILURE method=BackPackProductPageTest.verifyBackPackPgAddCartButtonTest()[pri:0, instance:testcases.BackPackProductPageTest@79d8407f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:15:50 IST" name="setUp" finished-at="2024-12-19T23:16:05 IST" duration-ms="15154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBackPackPgRemoveButtonTest()[pri:1, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:16:05 IST" name="verifyBackPackPgRemoveButtonTest" finished-at="2024-12-19T23:16:14 IST" duration-ms="8664" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //button[@id='remove']' (tried for 5 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //button[@id='remove']' (tried for 5 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:87)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at pages.BackPackProdPage.verifyBackPackPgRemoveButton(BackPackProdPage.java:81)
at testcases.BackPackProductPageTest.verifyBackPackPgRemoveButtonTest(BackPackProductPageTest.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: //button[@id='remove']
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.3', revision: 'e5e76298c3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [09a0bb78-3ecd-4508-b079-5a74e6cae52d, findElement {using=xpath, value=//button[@id='remove']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 115.0.2, moz:accessibilityChecks: false, moz:buildID: 20230710165010, moz:debuggerAddress: 127.0.0.1:25317, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 21068, moz:profile: C:\Users\Hp\AppData\Local\T..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://127.0.0.1:25317/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 09a0bb78-3ecd-4508-b079-5a74e6cae52d
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy18.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:307)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:40)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:293)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBackPackPgRemoveButtonTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:16:14 IST" name="tearDown" finished-at="2024-12-19T23:16:16 IST" duration-ms="1627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBackPackPgRemoveButtonTest status=FAILURE method=BackPackProductPageTest.verifyBackPackPgRemoveButtonTest()[pri:1, instance:testcases.BackPackProductPageTest@79d8407f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:16:16 IST" name="setUp" finished-at="2024-12-19T23:16:33 IST" duration-ms="17596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBackToProductsButtonTest()[pri:1, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:16:33 IST" name="verifyBackToProductsButtonTest" finished-at="2024-12-19T23:16:34 IST" duration-ms="319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBackToProductsButtonTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:16:34 IST" name="tearDown" finished-at="2024-12-19T23:16:35 IST" duration-ms="1392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBackToProductsButtonTest status=SUCCESS method=BackPackProductPageTest.verifyBackToProductsButtonTest()[pri:1, instance:testcases.BackPackProductPageTest@79d8407f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:16:35 IST" name="setUp" finished-at="2024-12-19T23:16:53 IST" duration-ms="17728" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBackPackThumbnailImgTest()[pri:3, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:16:53 IST" name="verifyBackPackThumbnailImgTest" finished-at="2024-12-19T23:16:53 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBackPackThumbnailImgTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.BackPackProductPageTest@79d8407f]" started-at="2024-12-19T23:16:53 IST" name="tearDown" finished-at="2024-12-19T23:16:54 IST" duration-ms="1488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBackPackThumbnailImgTest status=SUCCESS method=BackPackProductPageTest.verifyBackPackThumbnailImgTest()[pri:3, instance:testcases.BackPackProductPageTest@79d8407f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.BackPackProductPageTest -->
      <class name="testcases.InventoryPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:09:44 IST" name="setUp" finished-at="2024-12-19T23:10:02 IST" duration-ms="17877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAboutMenuLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:10:02 IST" name="verifyAboutMenuLinkTest" finished-at="2024-12-19T23:10:17 IST" duration-ms="14534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAboutMenuLinkTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:10:17 IST" name="tearDown" finished-at="2024-12-19T23:10:19 IST" duration-ms="1916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAboutMenuLinkTest status=SUCCESS method=InventoryPageTest.verifyAboutMenuLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:10:19 IST" name="setUp" finished-at="2024-12-19T23:10:34 IST" duration-ms="15353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBackPackTextTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:10:34 IST" name="verifyBackPackTextTest" finished-at="2024-12-19T23:10:34 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBackPackTextTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:10:34 IST" name="tearDown" finished-at="2024-12-19T23:10:35 IST" duration-ms="1350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBackPackTextTest status=SUCCESS method=InventoryPageTest.verifyBackPackTextTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:10:35 IST" name="setUp" finished-at="2024-12-19T23:10:52 IST" duration-ms="16905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBackPackThumbnailImgTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:10:52 IST" name="verifyBackPackThumbnailImgTest" finished-at="2024-12-19T23:10:53 IST" duration-ms="302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBackPackThumbnailImgTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:10:53 IST" name="tearDown" finished-at="2024-12-19T23:10:54 IST" duration-ms="1407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBackPackThumbnailImgTest status=SUCCESS method=InventoryPageTest.verifyBackPackThumbnailImgTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:10:54 IST" name="setUp" finished-at="2024-12-19T23:11:09 IST" duration-ms="14890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBackpackLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:11:09 IST" name="verifyBackpackLinkTest" finished-at="2024-12-19T23:11:09 IST" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBackpackLinkTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:11:09 IST" name="tearDown" finished-at="2024-12-19T23:11:11 IST" duration-ms="1422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBackpackLinkTest status=SUCCESS method=InventoryPageTest.verifyBackpackLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:11:11 IST" name="setUp" finished-at="2024-12-19T23:11:26 IST" duration-ms="15940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBikeLightLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:11:26 IST" name="verifyBikeLightLinkTest" finished-at="2024-12-19T23:11:27 IST" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBikeLightLinkTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:11:27 IST" name="tearDown" finished-at="2024-12-19T23:11:28 IST" duration-ms="1437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBikeLightLinkTest status=SUCCESS method=InventoryPageTest.verifyBikeLightLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:11:28 IST" name="setUp" finished-at="2024-12-19T23:11:45 IST" duration-ms="16779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBoltTshirtLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:11:45 IST" name="verifyBoltTshirtLinkTest" finished-at="2024-12-19T23:11:45 IST" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBoltTshirtLinkTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:11:45 IST" name="tearDown" finished-at="2024-12-19T23:11:47 IST" duration-ms="1571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBoltTshirtLinkTest status=SUCCESS method=InventoryPageTest.verifyBoltTshirtLinkTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:11:47 IST" name="setUp" finished-at="2024-12-19T23:12:05 IST" duration-ms="18078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyDropdownTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:12:05 IST" name="verifyDropdownTest" finished-at="2024-12-19T23:12:10 IST" duration-ms="5500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDropdownTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:12:10 IST" name="tearDown" finished-at="2024-12-19T23:12:12 IST" duration-ms="1397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDropdownTest status=SUCCESS method=InventoryPageTest.verifyDropdownTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:12:12 IST" name="setUp" finished-at="2024-12-19T23:12:29 IST" duration-ms="16954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFleeceJacketTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:12:29 IST" name="verifyFleeceJacketTest" finished-at="2024-12-19T23:12:29 IST" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFleeceJacketTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:12:29 IST" name="tearDown" finished-at="2024-12-19T23:12:31 IST" duration-ms="1440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFleeceJacketTest status=SUCCESS method=InventoryPageTest.verifyFleeceJacketTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:12:31 IST" name="setUp" finished-at="2024-12-19T23:12:47 IST" duration-ms="16747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFleeceJacketThumbnailImgTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:12:47 IST" name="verifyFleeceJacketThumbnailImgTest" finished-at="2024-12-19T23:12:48 IST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFleeceJacketThumbnailImgTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:12:48 IST" name="tearDown" finished-at="2024-12-19T23:12:49 IST" duration-ms="1469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFleeceJacketThumbnailImgTest status=SUCCESS method=InventoryPageTest.verifyFleeceJacketThumbnailImgTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:12:49 IST" name="setUp" finished-at="2024-12-19T23:13:05 IST" duration-ms="15780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyMenuCrossButtonTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:13:05 IST" name="verifyMenuCrossButtonTest" finished-at="2024-12-19T23:13:07 IST" duration-ms="2619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCrossButtonTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:13:07 IST" name="tearDown" finished-at="2024-12-19T23:13:09 IST" duration-ms="1677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyMenuCrossButtonTest status=SUCCESS method=InventoryPageTest.verifyMenuCrossButtonTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:13:09 IST" name="setUp" finished-at="2024-12-19T23:13:26 IST" duration-ms="16623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTwitterLogoTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:13:26 IST" name="verifyTwitterLogoTest" finished-at="2024-12-19T23:13:26 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTwitterLogoTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:13:26 IST" name="tearDown" finished-at="2024-12-19T23:13:27 IST" duration-ms="1493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTwitterLogoTest status=SUCCESS method=InventoryPageTest.verifyTwitterLogoTest()[pri:1, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:13:27 IST" name="setUp" finished-at="2024-12-19T23:13:44 IST" duration-ms="16783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyResetAppStateTest()[pri:2, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:13:44 IST" name="verifyResetAppStateTest" finished-at="2024-12-19T23:13:47 IST" duration-ms="3156" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Testcase failed as remove button is still displayed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Testcase failed as remove button is still displayed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1066)
at org.testng.Assert.assertEquals(Assert.java:1054)
at testcases.InventoryPageTest.verifyResetAppStateTest(InventoryPageTest.java:197)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetAppStateTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:13:47 IST" name="tearDown" finished-at="2024-12-19T23:13:49 IST" duration-ms="1652" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResetAppStateTest status=FAILURE method=InventoryPageTest.verifyResetAppStateTest()[pri:2, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:13:49 IST" name="setUp" finished-at="2024-12-19T23:14:07 IST" duration-ms="18570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifylogoutLinkTest()[pri:2, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:14:07 IST" name="verifylogoutLinkTest" finished-at="2024-12-19T23:14:08 IST" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifylogoutLinkTest -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:testcases.InventoryPageTest@13b6aecc]" started-at="2024-12-19T23:14:08 IST" name="tearDown" finished-at="2024-12-19T23:14:10 IST" duration-ms="1423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifylogoutLinkTest status=SUCCESS method=InventoryPageTest.verifylogoutLinkTest()[pri:2, instance:testcases.InventoryPageTest@13b6aecc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.InventoryPageTest -->
      <class name="testcases.CartPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:14:10 IST" name="setUp" finished-at="2024-12-19T23:14:26 IST" duration-ms="16164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBackpacklinkTest()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:14:26 IST" name="verifyBackpacklinkTest" finished-at="2024-12-19T23:14:26 IST" duration-ms="784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBackpacklinkTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:14:26 IST" name="tearDown" finished-at="2024-12-19T23:14:28 IST" duration-ms="1394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:14:28 IST" name="setUp" finished-at="2024-12-19T23:14:45 IST" duration-ms="17085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBikeLightLink()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:14:45 IST" name="verifyBikeLightLink" finished-at="2024-12-19T23:14:46 IST" duration-ms="1048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBikeLightLink -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:14:46 IST" name="tearDown" finished-at="2024-12-19T23:14:47 IST" duration-ms="1376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:14:47 IST" name="setUp" finished-at="2024-12-19T23:15:03 IST" duration-ms="16031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyContinueShoppingBtnTest()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:15:03 IST" name="verifyContinueShoppingBtnTest" finished-at="2024-12-19T23:15:04 IST" duration-ms="540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContinueShoppingBtnTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:15:04 IST" name="tearDown" finished-at="2024-12-19T23:15:06 IST" duration-ms="1670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:15:06 IST" name="setUp" finished-at="2024-12-19T23:15:23 IST" duration-ms="17230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyOrderPriceTest()[pri:1, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:15:23 IST" name="verifyOrderPriceTest" finished-at="2024-12-19T23:15:24 IST" duration-ms="1410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderPriceTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.CartPageTest@3c3d9b6b]" started-at="2024-12-19T23:15:24 IST" name="tearDown" finished-at="2024-12-19T23:15:26 IST" duration-ms="1355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.CartPageTest -->
    </test> <!-- Regression Tests -->
  </suite> <!-- Swaglabs_Suite -->
</testng-results>
